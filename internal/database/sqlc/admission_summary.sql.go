// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: admission_summary.sql

package sqlc

import (
	"context"
)

const createAdmissionSummary = `-- name: CreateAdmissionSummary :exec
INSERT INTO admission_summary (
    year,
    province,
    university_name,
    admission_type,
    subject_category,
    highest_score,
    highest_score_rank,
    lowest_score,
    lowest_score_rank
) VALUES (
    ?, ?, ?, ?, ?, ?, ?, ?, ?
)
`

type CreateAdmissionSummaryParams struct {
	Year             string `db:"year"`
	Province         string `db:"province"`
	UniversityName   string `db:"university_name"`
	AdmissionType    string `db:"admission_type"`
	SubjectCategory  string `db:"subject_category"`
	HighestScore     string `db:"highest_score"`
	HighestScoreRank string `db:"highest_score_rank"`
	LowestScore      string `db:"lowest_score"`
	LowestScoreRank  string `db:"lowest_score_rank"`
}

// 插入操作
func (q *Queries) CreateAdmissionSummary(ctx context.Context, arg CreateAdmissionSummaryParams) error {
	_, err := q.db.ExecContext(ctx, createAdmissionSummary,
		arg.Year,
		arg.Province,
		arg.UniversityName,
		arg.AdmissionType,
		arg.SubjectCategory,
		arg.HighestScore,
		arg.HighestScoreRank,
		arg.LowestScore,
		arg.LowestScoreRank,
	)
	return err
}

const deleteAdmissionSummary = `-- name: DeleteAdmissionSummary :exec
DELETE FROM admission_summary 
WHERE id = ?
`

// 删除操作
func (q *Queries) DeleteAdmissionSummary(ctx context.Context, id uint32) error {
	_, err := q.db.ExecContext(ctx, deleteAdmissionSummary, id)
	return err
}

const getAdmissionSummaryByID = `-- name: GetAdmissionSummaryByID :one
SELECT id, year, province, university_name, admission_type, subject_category, highest_score, highest_score_rank, lowest_score, lowest_score_rank, create_time FROM admission_summary 
WHERE id = ?
`

// 通过ID查询
func (q *Queries) GetAdmissionSummaryByID(ctx context.Context, id uint32) (AdmissionSummary, error) {
	row := q.db.QueryRowContext(ctx, getAdmissionSummaryByID, id)
	var i AdmissionSummary
	err := row.Scan(
		&i.ID,
		&i.Year,
		&i.Province,
		&i.UniversityName,
		&i.AdmissionType,
		&i.SubjectCategory,
		&i.HighestScore,
		&i.HighestScoreRank,
		&i.LowestScore,
		&i.LowestScoreRank,
		&i.CreateTime,
	)
	return i, err
}
